#include "fpmath.h"
#include "math.h"


int IM_GW;
int IM_GH;
#define PI					3.1415926
#define EPI					57.29578
char *g_lpOrgFinger;
int  PX(char *lpPos)
{
	/////////////////////////////////////////////////////////////////////////
	//	lpPos: [in] 当前点地址
	/////////////////////////////////////////////////////////////////////////
	return ((lpPos - g_lpOrgFinger) % IM_GW);
}

//
//	PY: 根据地址得到当前点的纵坐标
//
int  PY(char *lpPos)
{
	/////////////////////////////////////////////////////////////////////////
	//	lpPos: [in] 当前点地址
	/////////////////////////////////////////////////////////////////////////
	return ((lpPos - g_lpOrgFinger) / IM_GW);
}


int  GetJiajiao(int angle1, int angle2)
{
	/////////////////////////////////////////////////////////////////////////
	//	angle1: [in] 角度一 （0 - 180）
	//	angle2: [in] 角度二 （0 - 180）
	/////////////////////////////////////////////////////////////////////////
	int  a;

	a = abs(angle1-angle2);
	if(a > 90)
	{
		a = 180-a;
	}
	return a;
}



int  GetAngle(int x0, int y0, int x1, int y1)
{
	/////////////////////////////////////////////////////////////////////////
	//	x0: [in] 第一个点横坐标
	//	y0: [in] 第一个点纵坐标
	//	x1: [in] 第二个点横坐标
	//	y1: [in] 第二个点纵坐标
	/////////////////////////////////////////////////////////////////////////
	double angle;

	angle = atan2((double)(y1-y0), (double)(x1-x0));
	// 弧度转化到0 - 2*PI
	if(angle < 0)
	{
		angle += 2*PI;
	}
	// 弧度转化为角度
	return (int)(angle*EPI + 0.5);
}


int  GetAngleDis(int angleBegin, int angleEnd)
{
	/////////////////////////////////////////////////////////////////////////
	//	angleBegin: [in] 起始角度 （0 - 360）
	//	angleEnd: [in] 终结角度 （0 - 360）
	/////////////////////////////////////////////////////////////////////////
	int  a;

	a = angleEnd-angleBegin;
	if(a < 0)
	{
		a += 360;
	}
	return a;
}

int  AngleAbs360(int angle1, int angle2)
{
	/////////////////////////////////////////////////////////////////////////
	//	angle1: [in] 角度一 （0 - 360）
	//	angle2: [in] 角度二 （0 - 360）
	/////////////////////////////////////////////////////////////////////////
	int a;
	a = abs(angle1 - angle2);
	if(a > 180)
	{
		return (360 - a);
	}
	else
	{
		return a;
	}
}

















